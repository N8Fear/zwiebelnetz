// Generated by CoffeeScript 1.7.1
(function() {
  SecSocNet.ContactsController = Ember.ArrayController.extend({
    search: '',
    allContacts: null,
    content: (function() {
      return this.get('allContacts');
    }).property('allContacts'),
    filterContacts: function() {
      var regexp;
      if (this.get('search') === '') {
        return this.set('content', this.get('allContacts'));
      } else {
        regexp = new RegExp(this.get('search'), "i");
        return this.set('content', this.get('allContacts').filter(function(item, index, self) {
          return item.get('alias').match(regexp);
        }));
      }
    },
    searchPostsObserver: (function() {
      return Ember.run.debounce(this, this.filterContacts, 500);
    }).observes('search'),
    actions: {
      followContact: function() {
        var alias, onion;
        onion = this.get('contactOnion');
        alias = this.get('contactAlias');
        if (!onion.trim()) {
          return;
        }
        if (!alias.trim()) {
          return;
        }
        onion = this.store.createRecord('onion', {
          onion: onion
        });
        return onion.save().then((function(_this) {
          return function() {
            var contact;
            contact = _this.store.createRecord('contact', {
              onion: onion,
              alias: alias,
              status: 4
            });
            return contact.save().then(function() {
              _this.set('contactOnion', '');
              _this.set('contactAlias', '');
              _this.set('requestMessage', '');
              return _this.sync();
            }, function() {
              return alert("Could not add contact, is the alias alright?");
            });
          };
        })(this), function() {
          return alert("Could not add onion, is the onion alright?");
        });
      },
      createContactRequest: function() {
        var alias, onion, rmsg;
        onion = this.get('contactOnion');
        alias = this.get('contactAlias');
        rmsg = this.get('requestMessage');
        console.log(rmsg);
        if (!onion.trim()) {
          return;
        }
        if (!alias.trim()) {
          return;
        }
        if (!rmsg.trim()) {
          return;
        }
        onion = this.store.createRecord('onion', {
          onion: onion
        });
        return onion.save().then((function(_this) {
          return function() {
            var contact;
            console.log(rmsg);
            contact = _this.store.createRecord('contact', {
              onion: onion,
              alias: alias,
              request_message: rmsg,
              status: 2
            });
            console.log(contact);
            return contact.save().then(function() {
              _this.set('contactOnion', '');
              _this.set('contactAlias', '');
              _this.set('requestMessage', '');
              return _this.sync();
            }, function() {
              return alert("Could not add contact, are alias and message alright?");
            });
          };
        })(this), function() {
          return alert("Could not add onion, is the onion alright?");
        });
      }
    },
    sync: function() {
      var token, user, xhr;
      user = Ember.$.cookie('auth_user');
      token = Ember.$.cookie('auth_token');
      xhr = new XMLHttpRequest();
      xhr.open("post", "/sync", true);
      xhr.setRequestHeader('Auth-User', user);
      xhr.setRequestHeader('Auth-Token', token);
      return xhr.send(null);
    }
  });

}).call(this);
