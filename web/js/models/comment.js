// Generated by CoffeeScript 1.7.1
(function() {
  SecSocNet.Comment = DS.Model.extend({
    message: DS.attr('string'),
    createdAt: DS.attr('string', {
      defaultValue: function() {
        return new Date().toISOString();
      }
    }),
    postedAt: DS.attr('string', {
      defaultValue: function() {
        return new Date().toISOString();
      }
    }),
    updatedAt: DS.attr('string', {
      defaultValue: function() {
        return new Date().toISOString();
      }
    }),
    ttl: DS.attr('number'),
    profilePictureId: DS.attr('number'),
    author: DS.belongsTo('author', {
      async: true
    }),
    originator: DS.belongsTo('originator', {
      async: true
    }),
    post: DS.belongsTo('post', {
      async: true
    }),
    isRemotePublished: DS.attr('boolean'),
    profilePicture: "img/no_profile_picture.jpg",
    profilePictureCall: (function() {
      var profile;
      if (this.get('profilePictureId') > 0) {
        return profile = this.store.find('profile', this.get('profilePictureId')).then((function(_this) {
          return function(_profile) {
            return _this.set('profilePicture', "data:image/jpg;base64," + _profile.get('value'));
          };
        })(this));
      } else {
        return this.set('profilePicture', "img/no_profile_picture.jpg");
      }
    }).property('profilePictureId'),
    contactAlias: "",
    contact: (function() {
      return this.get('author').then((function(_this) {
        return function(_author) {
          return _author.get('contact').then(function(_contact) {
            return _this.set('contactAlias', _contact.get('alias'));
          });
        };
      })(this));
    }).property('author.contacts'),
    createdAtFromNow: (function() {
      return moment(this.get('postedAt')).fromNow();
    }).property('createdAt'),
    commentHeader: (function() {
      this.get('profilePictureCall');
      this.get('contact');
      if (this.get('author.id') < 2) {
        return "You commented " + this.get('createdAtFromNow');
      } else {
        return this.get('contactAlias') + " ( " + this.get('author.onion') + " ) commented " + this.get('createdAtFromNow');
      }
    }).property('createdAtFromNow', 'author.id', 'author.onion', 'contactAlias'),
    commentPending: (function() {
      return this.get('isRemotePublished');
    }).property("isRemotePublished")
  });

}).call(this);
